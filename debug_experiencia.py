
from models.experiencia import ExperienciaModel

def debug_experiencia():
    model = ExperienciaModel()
    print("\n1Ô∏è‚É£ CREANDO EXPERIENCIA DE PRUEBA")
    print("-" * 35)
    experiencia_data = {
        'Cargo': 'Cardi√≥logo',
        'Anios_exp': 5,
        'auto_id': True
    }
    create_result = model.create_experiencia(experiencia_data)
    print(create_result)

    if create_result['success']:
        id_personal = create_result['id_personal']
        id_hospital = create_result['id_hospital']

        # Verificar creaci√≥n (buscar por ID)
        print("\n2Ô∏è‚É£ VERIFICANDO CREACI√ìN")
        print("-" * 35)
        experiencia = model.get_experiencia_by_id(id_hospital, id_personal)
        if experiencia:
            print(f"‚úÖ Experiencia creada: {experiencia}")
        else:
            print("‚ùå No se encontr√≥ la experiencia creada")

        # Actualizar experiencia
        print("\n3Ô∏è‚É£ ACTUALIZANDO EXPERIENCIA")
        print("-" * 35)
        update_result = model.update_experiencia(id_hospital, id_personal, {'Cargo': 'Cardi√≥logo', 'Anios_exp': 6})
        print(update_result)

        # Verificar actualizaci√≥n
        print("\n4Ô∏è‚É£ VERIFICANDO ACTUALIZACI√ìN")
        print("-" * 35)
        experiencia_mod = model.get_experiencia_by_id(id_hospital, id_personal)
        if experiencia_mod:
            print(f"‚úÖ Experiencia actualizada: {experiencia_mod}")
        else:
            print("‚ùå No se encontr√≥ la experiencia actualizada")

        # Buscar experiencia por cargo
        print("\n5Ô∏è‚É£ PROBANDO B√öSQUEDA POR CARGO")
        print("-" * 35)
        search_result = model.search_experiencias('Cardi√≥logo')
        if search_result['success']:
            print(f"üîç B√∫squeda exitosa: {search_result['total']} resultados encontrados")
            for exp in search_result.get('experiencias', []):
                print(f"   üî∏ {exp}")
        else:
            print(f"‚ùå Error en b√∫squeda: {search_result['error']}")

        # Eliminar experiencia
        print("\n6Ô∏è‚É£ ELIMINANDO EXPERIENCIA DE PRUEBA")
        print("-" * 35)
        delete_result = model.delete_experiencia(id_hospital, id_personal, 'Cardi√≥logo')
        print(delete_result)

        # Verificar eliminaci√≥n
        experiencia_del = model.get_experiencia_by_id(id_hospital, id_personal)
        if not experiencia_del:
            print("‚úÖ Verificaci√≥n: Experiencia eliminada correctamente")
        else:
            print("‚ö†Ô∏è Advertencia: La experiencia a√∫n existe despu√©s de la eliminaci√≥n")
    else:
        print(f"‚ùå Error creando experiencia: {create_result['error']}")

if __name__ == "__main__":
    debug_experiencia()
